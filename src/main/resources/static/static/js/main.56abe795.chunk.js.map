{"version":3,"sources":["component/shared/Nav.js","component/Welcome.js","component/dashboard/DashboardItem.js","actions/projectAction.js","actions/types.js","component/dashboard/Dashboard.js","component/dashboard/dashboardoperations/CreateWallet.js","component/shared/NotFound.js","reducers/errorReducer.js","reducers/walletReducer.js","reducers/rootReducer.js","Store.js","component/dashboard/dashboardoperations/updateWallet.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","type","data-toggle","data-target","id","href","Component","Welcome","DashboardItem","deleteClickBtn","window","confirm","props","deleteWallet","wallet","this","Productname","quantity","price","onClick","connect","dispatch","a","axios","delete","then","res","payload","Dashboard","getWallets","walletComponet","wallets","map","key","aria-haspopup","aria-expanded","disabled","state","get","data","CreateWallet","changeHandler","event","fieldName","setState","target","value","submitHandler","newWallet","name","Prductname","BloodGroup","gender","createWallet","history","preventDefault","errors","nextProps","onSubmit","onChange","classnames","placeholder","post","push","catch","err","response","NotFound","class","initalState","combineReducers","action","filter","x","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","UpdateWallet","updateWallet","getWallet","match","params","console","log","put","App","path","component","exact","Signup","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.56abe795.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            \r\n           \r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                    Auto Decoration\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to={'/dashboard'}>\r\n                                    Dashboard\r\n                            </Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                       \r\n                    </li>\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to={'/signup'}>\r\n                            signup\r\n                    </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"login.html\">\r\n                                    Login\r\n                            </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react'\r\n\r\nclass Welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Auto Decoration Management System</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to orders </p>\r\n                                <hr />\r\n                                <a href=\"/signup\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                \r\n                                    Sign Up\r\n                            </a>\r\n                            \r\n                                <a href=\"login.html\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                            </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { deleteWallet } from '../../actions/projectAction'\r\n\r\n\r\nclass DashboardItem extends Component {\r\n\r\n    deleteClickBtn = () => {\r\n        if (window.confirm(\"Are you use, you wan to delete this wallet\")) {\r\n            this.props.deleteWallet(this.props.wallet.id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const wallet = this.props.wallet\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-lg-4 col-md-3 col-6\">\r\n                            <h4>Product Name</h4>\r\n                            <h3>{wallet.Productname} </h3>\r\n                            <h4>quantity</h4>\r\n                            <h5>{wallet.quantity}</h5>\r\n\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-3 col-6 text-center\">\r\n                            <h4>price</h4>\r\n                            <h5>{wallet.price}</h5>\r\n                          \r\n                           \r\n                        </div>\r\n                        <div className=\"col-md-4 col-12 d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <a href=\"viewprofile.html\">\r\n                                    <li className=\"list-group-item board text-success\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\">  </i>\r\n                                    </li>\r\n                                </a>\r\n                                <Link to={`/update/${wallet.id}`}>\r\n                                    <li className=\"list-group-item update text-info\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to=\"/dashboard\" onClick={() => this.deleteClickBtn()}>\r\n                                    <li className=\"list-group-item delete text-danger\">\r\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete </i>\r\n                                    </li>\r\n                                </Link>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { deleteWallet })(DashboardItem)\r\n","import axios from 'axios'\r\nimport { GET_ERRORS, GET_WALLETS, DELETE_WALLET, GET_WALLET } from './types'\r\n\r\nexport const createWallet = (newWallet, history) => async dispatch => {\r\n    await axios.post('/blood', newWallet)\r\n        .then((res) => {\r\n            history.push('/dashboard')\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: GET_ERRORS, payload: err.response.data })\r\n        })\r\n}\r\n\r\nexport const updateWallet = (id,updateWallet, history) => async dispatch => {\r\n    let url = `/blood/${id}`;\r\n    console.log(history);\r\n    await axios.put(`/blood/${id}`, updateWallet)\r\n         .then((res) => {\r\n             history.push('/dashboard')\r\n         })\r\n         .catch((err) => { \r\n            console.log(err)\r\n            //dispatch({ type: GET_ERRORS, payload: err.response.data })\r\n         })\r\n}\r\n\r\n\r\nexport const getWallets = () => async dispatch => {\r\n    await axios.get('/blood')\r\n        .then((res) => {\r\n            \r\n            dispatch({ type: GET_WALLETS, payload: res.data })\r\n        })\r\n\r\n}\r\n\r\n\r\nexport const deleteWallet = (id) => async dispatch => {\r\n    await axios.delete(`/blood/${id}`)\r\n        .then((res) => {\r\n            \r\n            dispatch({ type: DELETE_WALLET, payload: id })\r\n        })\r\n\r\n}\r\n\r\nexport const getWallet = (id) => async dispatch => {\r\n\r\n    await axios.get(`/blood/${id}`)\r\n         .then((res) => {\r\n            \r\n            dispatch({ type: GET_WALLET, payload: res.data })\r\n         })\r\n\r\n}","export const GET_ERRORS='GET_ERRORS';\r\n\r\nexport const GET_WALLETS='GET_WALLETS';\r\n\r\nexport const DELETE_WALLET='DELETE_WALLET';\r\n\r\nexport const GET_WALLET='GET_WALLET';","import React, { Component } from 'react'\r\nimport DashboardItem from './DashboardItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getWallets } from '../../actions/projectAction'\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getWallets()\r\n    }\r\n\r\n    render() {\r\n        const wallets = this.props.wallets\r\n        const walletComponet = wallets.map(wallet => (<DashboardItem key={wallet.id} wallet={wallet} />))\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Auto Decoration</h1>\r\n                            <br />\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-info btn-lg dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    create order\r\n                            </button>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link className=\"dropdown-item\" to=\"/create\">New</Link>\r\n                                    <button disabled className=\"dropdown-item\">..</button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h4>Current Orders</h4>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n\r\n                            {\r\n\r\n                                //<!-- Project Item Component -->\r\n                            }\r\n                            {walletComponet}\r\n\r\n                            {\r\n                                // <!-- End of Project Item Component -->\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatToProp = (state) => ({\r\n    wallets: state.wallet.wallets \r\n})\r\n\r\nexport default connect(mapStatToProp, { getWallets })(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createWallet } from '../../../actions/projectAction'\r\nimport classnames from 'classnames'\r\n\r\nclass CreateWallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Prductname: '',\r\n            quantity: '',\r\n            price: '',\r\n            errors: ''\r\n\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        const newWallet = {\r\n            name: this.state.Prductname,\r\n            BloodGroup: this.state.quantity,\r\n            gender: this.state.price,\r\n        }\r\n        this.props.createWallet(newWallet, this.props.history)\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Order Now ! </h5>\r\n                            <hr />\r\n                            <form onSubmit={(event) => this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"Productname\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.Prductname })} placeholder=\"Prduct name\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.Prductname}</p>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"quantity\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.quantity })} placeholder=\"quantity\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.quantity}</p>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input onChange={(event) => this.changeHandler(event, \"price\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.price })} placeholder=\"price\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.price}</p>\r\n                                </div>\r\n\r\n\r\n\r\n                                \r\n\r\n                            \r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Create\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapToPropos = (state) => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapToPropos, { createWallet })(CreateWallet)\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"error-template\">\r\n                            <h1>\r\n                                Oops!</h1>\r\n                            <h2>\r\n                                404 Not Found</h2>\r\n                            <div class=\"error-details\">\r\n                                Sorry, an error has occured, Requested page not found!\r\n                        </div>\r\n                            <div class=\"error-actions\">\r\n                                <Link to=\"/\" class=\"btn btn-primary btn-lg\"><span class=\"glyphicon glyphicon-home\"></span>\r\n                                Take Me Home </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initalState = {}\r\n\r\nexport default function (state = initalState, action) {\r\n    switch (action.type) {\r\n\r\n        case GET_ERRORS:\r\n            return action.payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_WALLETS, DELETE_WALLET, GET_WALLET } from '../actions/types'\r\n\r\nconst initalState = {\r\n    wallets: [],\r\n    wallet:''\r\n}\r\n\r\nexport default function (state = initalState, action) {\r\n    switch (action.type) {\r\n\r\n        case GET_WALLETS:\r\n            return { ...state, wallets: action.payload };\r\n        case GET_WALLET:\r\n            return{...state,wallet:action.payload}\r\n\r\n        case DELETE_WALLET:\r\n            return { ...state, wallets: state.wallets.filter(x => x.id !== action.payload) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport errorReducer from './errorReducer';\r\nimport walletReducer from './walletReducer';\r\n\r\nexport default combineReducers({\r\n    errors:errorReducer,\r\n    wallet:walletReducer\r\n}); ","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst initialState = {}\r\nconst middleWare = [thunk]\r\nlet store;\r\n\r\n// if (window.navigator.userAgent.includes(\"Chrome\")) {\r\n//     store = createStore(rootReducer,\r\n//         initialState,\r\n//         compose(applyMiddleware(...middleWare),\r\n//             window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n//             window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//         ))\r\n// } else {\r\n    store = createStore(rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleWare)))\r\n// }\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {getWallet, updateWallet} from '../../../actions/projectAction'\r\nimport classnames from 'classnames'\r\n\r\nclass UpdateWallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id:'',\r\n            Prductname: '',\r\n            quantity: '',\r\n            price: '',\r\n            errors: ''\r\n\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n        if(nextProps.wallet)\r\n        {\r\n            this.setState({\r\n                id:nextProps.wallet.id,\r\n                name: nextProps.wallet.Prductname,\r\n                BloodGroup: nextProps.wallet.quantity,\r\n                gender: nextProps.wallet.price\r\n              \r\n            })\r\n        }\r\n    }\r\n    componentDidMount (){\r\n        this.props.getWallet(this.props.match.params.id)\r\n    }\r\n\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        const updateWallet = {\r\n            id:this.state.id,\r\n            name: this.state.Prductname,\r\n            BloodGroup: this.state.quantity,\r\n            gender: this.state.price\r\n        }\r\n        this.props.updateWallet(this.state.id,updateWallet,this.props.history)\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update  </h5>\r\n                            <hr />\r\n                            <form onSubmit={(event) => this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.Prductname} onChange={(event) => this.changeHandler(event, \"Prductname\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.Prductname })} placeholder=\" Prductname\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.Prductname}</p>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.quantity} onChange={(event) => this.changeHandler(event, \"quantity\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.quantity })} placeholder=\"quantity \" />\r\n                                    <p className=\"text-danger\">{this.state.errors.quantity}</p>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea value={this.state.price} onChange={(event) => this.changeHandler(event, \"price\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.price })} placeholder=\"price \"></textarea>\r\n                                    <p className=\"text-danger\">{this.state.errors.price}</p>\r\n                                </div>\r\n\r\n\r\n\r\n                               \r\n                               \r\n\r\n                                <input onClick={(event) => this.submitHandler(event)} className=\"btn btn-primary btn-block mt-4\" value=\"Update\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapToPropos = (state) => ({\r\n    errors: state.errors,\r\n    wallet:state.wallet.wallet\r\n})\r\n\r\nexport default connect(mapToPropos, { getWallet, updateWallet })(UpdateWallet)\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from './component/shared/Nav';\nimport Welcome from './component/Welcome';\nimport Dashboard from './component/dashboard/Dashboard';\nimport CreateWallet from './component/dashboard/dashboardoperations/CreateWallet';\nimport Signup from './component/dashboard/dashboardoperations/signup';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NotFound from './component/shared/NotFound';\nimport {Provider} from 'react-redux'\nimport store from './Store'\nimport updateWallet from './component/dashboard/dashboardoperations/updateWallet';\nimport 'react-app-polyfill/stable'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n   <BrowserRouter>\n   <Route path=\"/\" component={Nav} />\n   <Switch>\n   <Route path=\"/\" exact component={Welcome} />\n    <Route path=\"/dashboard\" exact component={Dashboard} />\n    <Route path=\"/create\" exact component={CreateWallet} />\n    <Route path=\"/update/:id\" exact component={updateWallet} />\n    <Route path=\"/signup\" exact component={Signup}/>\n    <Route path=\"/\" component={NotFound} />\n    </Switch>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}